#!/usr/bin/env python2

import optparse
import subprocess
import os
import signal

parser = optparse.OptionParser(r"""

Starts the app listening on localhost, for local development.

This script launches the various Tornado servers, then runs a reverse proxy
which serves to the frontend.  After it's all up and running, browse to

    http://localhost:8888/
""")

parser.add_option(
    '--interface',
    action='store', dest='interface',
    default='127.0.0.1', help='Set the interface for the proxy to listen on'
)
parser.add_option(
    '--user',
    action='store', dest='user',
    default='admin@example.com', help='Set the user for the proxy'
)

(options, args) = parser.parse_args()

os.chdir(os.path.join(os.path.dirname(__file__), '..'))

# Set up a new process group, so that we can later kill the servers
# and all of the processes they spawn.
os.setpgrp()

settings = os.environ.get("GROUPER_SETTINGS", "config/dev.yaml")

cmds = [
    "bin/grouper-ctl -vvc {} user_proxy {}".format(
        settings,
        options.user,
    ),
    "bin/grouper-fe --config={}".format(settings),
    "bin/grouper-api --config={}".format(settings),
]

for cmd in cmds:
    subprocess.Popen(cmd, shell=True)

try:
    signal.pause()
finally:
    # Kill everything in our process group.
    os.killpg(0, signal.SIGTERM)
